esphome:
  name: espcan

esp32:
  board: esp32doit-devkit-v1

# Enable logging
logger:
  level: INFO
  baud_rate: 115200

# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret fallback_ssid
    password: !secret fallback_password

  manual_ip:
    static_ip: 192.168.235.37
    gateway: 192.168.235.5
    subnet: 255.255.255.0

captive_portal:

binary_sensor:
  - platform: template
    name: "Fridge"
    id: "fridge"
  - platform: template
    name: "Door light"
    id: "door_light"

button:
  - platform: template
    name: "fridge on"
    on_press:
      - logger.log:
          format: "Switch Turned On!"
          level: INFO
      - canbus.send:
          can_id: 0x531
          data: [0x07, 0x00, 0x00, 0x00]
  - platform: template
    name: "fridge off"
    on_press:
      - logger.log:
          format: "Switch Turned Off!"
          level: INFO
      - canbus.send:
          can_id: 0x531
          data: [0x00, 0x00, 0x00, 0x00]


canbus:
  - platform: esp32_can
    can_id: 0x0
    tx_pin: GPIO25
    rx_pin: GPIO26
    bit_rate: 500kbps
    on_frame:
    - can_id: 0x528
      then:
        lambda: |-
          if (x.size() == 4) {
            //ESP_LOGI("can id", "%02x: %02x %02x %02x %02x", can_id, x[0], x[1], x[2], x[3]);
            if (x[1] & 0b10000000) {
              id(door_light).publish_state(true);
            } else {
              id(door_light).publish_state(false);
            }
          }
    - can_id: 0x532
      then:
        lambda: |-
          if (x.size() == 5) {
            if (x[0] & 0b00000001) {
              id(fridge).publish_state(true);
            } else {
              id(fridge).publish_state(false);
            }
          }

